<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
      PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
   
<mapper namespace="com.hw.dao.UserDAO">
	<select id="getIdDupliChkCount" resultType="Integer" parameterType="String">
		SELECT COUNT(1) AS id_cnt FROM user_info WHERE id = #{id}
	</select>
	
	<insert id="insertUserInfo" parameterType="userInfoVO">
		INSERT INTO user_info
		(
			id
			, pw
			, user_type_cd
			, sex_cd
			, name
			, birth
			, hp_number
			, jibun_addr
			, road_addr
			, detail_addr
			, zipcode
			, mail
			, mail_key
			, mail_confirm
			, reg_dtm
			, updt_dtm
			, di
		)
		VALUES
		(
			#{id}
			, SHA2(#{pw}, 256)
			, #{userTypeCd}
			, #{sexCd}
			, #{name}
			, #{birth}
			, #{hpNumber}
			, #{jibunAddr}
			, #{roadAddr}
			, #{detailAddr}
			, #{zipcode}
			, #{mail}
			, #{mailKey}
			, #{mailConfirm}
			, NOW()
			, #{updtDtm}
			, #{di}
		)
	</insert>
	
	<update id="updateMailKey" parameterType="userInfoVO">
		UPDATE user_info SET mail_key = #{mailKey} WHERE mail = #{mail} AND id = #{id}
	</update>
	
	<update id="updateMailConfirm" parameterType="userInfoVO">
		UPDATE user_info SET mail_confirm = #{mailConfirm} WHERE mail = #{mail} AND mail_key = #{mailKey}
	</update>
	
	<select id="getMailConfirmChkCount" resultType="Integer" parameterType="String">
		SELECT COUNT(1) AS mail_confirm_cnt FROM user_info WHERE id = #{id} AND mail_confirm = 'Y'
	</select>
	
	<select id="getIdListByMailAndMailKey" resultType="userInfoVO" parameterType="userInfoVO">
		SELECT
			id
		FROM
			user_info
		WHERE mail_confirm = 'N' 
		AND mail = #{mail} 
		AND mail_key = #{mailKey}
	</select>
	
	<select id="getUserInfoByIdAndPw" resultType="userInfoVO" parameterType="userInfoVO">
		SELECT
			id                        AS id         
			, pw                      AS pw         
			, user_type_cd            AS userTypeCd 
			, sex_cd                  AS sexCd      
			, name                    AS name       
			, birth                   AS birth      
			, hp_number               AS hpNumber   
			, jibun_addr              AS jibunAddr
			, road_addr               AS roadAddr       
			, detail_addr             AS detailAddr       
			, zipcode                 AS zipcode   
			, mail                    AS mail       
			, mail_key                AS mailKey    
			, mail_confirm            AS mailConfirm
			, reg_dtm                 AS regDtm     
			, updt_dtm                AS updtDtm
			, di                      AS di    
		FROM
			user_info
		WHERE id = #{id} 
		AND pw = SHA2(#{pw}, 256)
	</select>
	
	<select id="getDiDupliChkCount" resultType="Integer" parameterType="String">
		SELECT COUNT(1) AS di_cnt FROM user_info WHERE di = #{di}
	</select>
	
	<select id="getUserEscasStorageAllList" resultType="userEscasStorageVO" parameterType="userEscasStorageVO">
		SELECT 
			a.user_id                                                                         AS userId                 
			, a.seq                                                                             AS seq                    
			, a.escas_storage_description                                                       AS escasStorageDescription
			, a.escas_url_parameter                                                             AS escasUrlParameter      
			, a.escas_logic_version                                                             AS escasLogicVersion      
			, a.reg_dtm                                                                         AS regDtm                 
			, a.updt_dtm                                                                        AS updtDtm                        
		FROM
			user_escas_storage a
		<where>
		    <if test="userId != null and userId != ''">
		    	AND a.user_id = #{userId}
		    	ORDER BY a.reg_dtm DESC 
		    </if>
		</where>
	</select>
	
	<select id="getUserEscasStorageVOMaxSeq" resultType="Integer" parameterType="String">
		SELECT IFNULL(MAX(seq), 0)+1 AS seq FROM user_escas_storage WHERE user_id = #{userId} 
	</select>
	
	<insert id="insertUserEscasStorageVO" parameterType="userEscasStorageVO">
		INSERT INTO user_escas_storage
		(
			user_id
			, seq
			, escas_storage_description
			, escas_url_parameter
			, escas_logic_version
			, reg_dtm
			, updt_dtm
		)
		VALUES
		(
			#{userId}
			, #{seq}
			, #{escasStorageDescription}
			, #{escasUrlParameter}
			, #{escasLogicVersion}
			, NOW()
			, #{updtDtm}
		)
	</insert>
	
	<update id="updateUserEscasStorageVO" parameterType="userEscasStorageVO">
		UPDATE
			user_escas_storage
		SET
			user_id                          = #{userId}                 
			, seq                            = #{seq}                    
			, escas_storage_description      = #{escasStorageDescription}
			, escas_url_parameter            = #{escasUrlParameter}      
			, escas_logic_version            = #{escasLogicVersion}      
			, updt_dtm                       = NOW()                                          
		WHERE
			user_id = #{userId}
	</update>
	
	<delete id="deleteUserEscasStorageVO" parameterType="userEscasStorageVO">
		DELETE
		FROM
			user_escas_storage
		WHERE
			user_id = #{userId}
			AND seq = #{seq}
	</delete>

</mapper>